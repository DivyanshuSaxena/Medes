[heuristics]
; MB size of duplicate chunks
; # refcount of base container
; if the base container is on the same local machine as the dedup container
basechoice = 1 2 10

; # of Dedup Containers
; # of Warm Containers
; Request Arrival Rate
; Keep Warm Period
; Keep Dedup Period
statepolicy = -2 3 -0.5 2 0

[policy]
; 1 = Openwhisk
; 2 = HeuristicOpenwhisk
; 3 = NoneHeuristic
; 4 = Heuristic
; 5 = Admin-controller heuristic (Medes)
; 6 = Adaptive Keep-Alive
policy = 5

; 1 = Latency constraint
; 2 = Memory constraint
constraint = 2

; 0 = Use only warm containers for calculation of provisioned requests
; 1 = Use warm and dedup containers for calculation of provisioned requests
provisioned = 0

; Increase the purge boundary by this factor (CURRENTLY UNUSED)
gamma = 1.5

; Parameter for policy (CURRENTLY UNUSED)
alpha = 2
beta = 10

; # of dedup containers per base container
dedupperbase = 40

; Heuristic threshold above which containers get deduplicated
; (CURRENTLY UNUSED)
threshold = 20

[params]
; Per machine memory
memcap = 2500

; Reuse period for reusing a container after a state change
reuseperiod = 500

; Minutes to take in the window for calculation of average and maximum rates
window = 10